{"version":3,"sources":["components/CarouselSettings.js","components/Carousel.js","App.js","index.js"],"names":["CarouselSettings","state","change","props","bind","this","frameSize","step","itemWidth","duration","className","htmlFor","id","onChange","e","defaultValue","type","React","Component","Carousel","images","infinite","position","target","setState","value","checked","move","currPosition","textContent","length","Math","max","min","onClick","style","width","transition","transform","map","img","index","key","src","alt","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0122c4b7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class CarouselSettings extends React.Component {\n  state = {\n    change: this.props.change.bind(this),\n  }\n\n  render() {\n    const { change } = this.state;\n    const { frameSize, step, itemWidth, duration } = this.props;\n\n    return (\n      <div className=\"form\">\n        <label htmlFor=\"frameSize\">\n          Frame size:\n          <select\n            id=\"frameSize\"\n            onChange={e => change(e, 'frameSize')}\n            defaultValue={frameSize}\n          >\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"step\">\n          Step:\n          <select\n            id=\"step\"\n            onChange={e => change(e, 'step')}\n            defaultValue={step}\n          >\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"itemWidth\">\n          Item Width:\n          <select\n            id=\"itemWidth\"\n            onChange={e => change(e, 'itemWidth')}\n            defaultValue={itemWidth}\n          >\n            <option>50</option>\n            <option>90</option>\n            <option>130</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"duration\">\n          Animation Duration:\n          <select\n            id=\"duration\"\n            onChange={e => change(e, 'duration')}\n            defaultValue={duration}\n          >\n            <option>1000</option>\n            <option>2000</option>\n            <option>3000</option>\n            <option>7000</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"infinite\">\n          Infinite:\n          <input\n            id=\"infinite\"\n            type=\"checkbox\"\n            onChange={e => change(e)}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nCarouselSettings.propTypes = {\n  change: PropTypes.func.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  step: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  duration: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\nimport { CarouselSettings } from './CarouselSettings';\n\nclass Carousel extends React.Component {\n  state = {\n    images: this.props.images,\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    duration: 1000,\n    infinite: false,\n    position: 0,\n  }\n\n  change = (e, id) => {\n    const { target } = e;\n\n    this.setState((state) => {\n      let { frameSize, step, itemWidth, duration, infinite } = state;\n\n      switch (id) {\n        case 'frameSize':\n          frameSize = target.value;\n          break;\n        case 'step':\n          step = target.value;\n          break;\n        case 'itemWidth':\n          itemWidth = target.value;\n          break;\n        case 'duration':\n          duration = target.value;\n          break;\n        default:\n          infinite = target.checked;\n      }\n\n      return ({\n        images: state.images,\n        frameSize,\n        step,\n        itemWidth,\n        duration,\n        infinite,\n      });\n    });\n  }\n\n  move = (e) => {\n    const { target } = e;\n\n    this.setState((state) => {\n      const { position, itemWidth, step, infinite, images, frameSize } = state;\n      let currPosition = position;\n\n      if (target.textContent === '⇨') {\n        currPosition -= itemWidth * step;\n\n        if (infinite && position === -itemWidth * (images.length - step)) {\n          return ({\n            position: 0,\n          });\n        }\n\n        currPosition = Math.max(\n          currPosition, -itemWidth * (images.length - frameSize),\n        );\n      }\n\n      if (target.textContent === '⇦') {\n        currPosition += itemWidth * step;\n        currPosition = Math.min(currPosition, 0);\n\n        if (infinite && position === 0) {\n          return ({\n            position: -itemWidth * (images.length - step),\n          });\n        }\n      }\n\n      return ({\n        position: currPosition,\n      });\n    });\n  }\n\n  render() {\n    const { frameSize, itemWidth, duration, images } = this.state;\n\n    return (\n      <>\n        <div className=\"Carousel\">\n          <button type=\"button\" onClick={e => this.move(e)}>⇦</button>\n          <div\n            className=\"Carusel__list\"\n            style={{ width: `${itemWidth * frameSize}px` }}\n          >\n            <ul\n              className=\"images\"\n              style={{\n                width: `${itemWidth * images.length}px`,\n                transition: `transform ${duration}ms`,\n                transform: `translateX(${this.state.position}px)`,\n              }}\n            >\n              {images.map((img, index) => (\n                <li\n                  key={img}\n                >\n                  <img\n                    style={{ width: `${itemWidth}px` }}\n                    src={img}\n                    alt={index}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <button type=\"button\" onClick={e => this.move(e)}>⇨</button>\n        </div>\n\n        <div className=\"settings\">\n          <CarouselSettings change={this.change} {...this.state} />\n        </div>\n\n      </>\n    );\n  }\n}\n\nexport default Carousel;\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Carousel {...this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}